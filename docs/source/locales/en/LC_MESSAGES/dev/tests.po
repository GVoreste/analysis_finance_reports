# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Oreste Sciacqualegni
# This file is distributed under the same license as the freeports_analysis
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: freeports_analysis \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-14 11:57+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/dev/tests.rst:3
msgid "Tests"
msgstr ""

#: ../../source/dev/tests.rst:5
msgid ""
"The tests are developed using `pytest "
"<https://docs.pytest.org/en/stable/>`_ and they are located in the "
"``tests/`` directory. This guide will forcus on the development of the "
"tests related to the creation of a format. In order to make a test there "
"are three steps:"
msgstr ""

#: ../../source/dev/tests.rst:8
#, python-brace-format
msgid ""
"create the test file in the ``tests/formats/`` directory. It has to be "
"called ``test_{format name}.py``"
msgstr ""

#: ../../source/dev/tests.rst:9
#, python-brace-format
msgid ""
"create the dataset to test and with validated results into "
"``tests/data/{FORMAT NAME}/``"
msgstr ""

#: ../../source/dev/tests.rst:10
msgid "activate the relevant single page tests in the ``tests/conftest.py`` file"
msgstr ""

#: ../../source/dev/tests.rst:15
msgid "Test file"
msgstr ""

#: ../../source/dev/tests.rst:17
msgid ""
"You can take as reference any test file for the others formats. As you "
"can see usually there are four tests:"
msgstr ""

#: ../../source/dev/tests.rst:19
msgid "``PdfFilter`` single page"
msgstr ""

#: ../../source/dev/tests.rst:20
msgid "``TextExtract`` single page"
msgstr ""

#: ../../source/dev/tests.rst:21
msgid "``Deserialize`` single page"
msgstr ""

#: ../../source/dev/tests.rst:22
msgid "``pipeline``"
msgstr ""

#: ../../source/dev/tests.rst:24
msgid ""
"The first three are parametrized tests on a single page of a pdf report "
"that usually behave in the same manner and call an utility to test in a "
"standardized way. The last one is marked as ``integration_tests`` "
"(because it is slow) and it is not run after each commit but only in the "
"CI pipeline upon push on ``dev`` or ``main`` remote branches (or by the "
"user launching ``pytest`` command without any option). This test is run "
"on an entire document and check on the output ``csv``."
msgstr ""

#: ../../source/dev/tests.rst:30
msgid ""
"It is not mandatory to test and provide single page tests or pipeline "
"test for all three functions if some of them are not defined or not "
"working."
msgstr ""

#: ../../source/dev/tests.rst:35
msgid "Test dataset"
msgstr ""

#: ../../source/dev/tests.rst:37
#, python-brace-format
msgid ""
"The dataset to assert the validity of tests and to recreate them consists"
" in different files placed in ``tests/data/{FORMAT NAME}/``. One document"
" pdf named ``report.pdf`` has to be present to validate the ``PdfFilter``"
" function and for the integration test. In order to check the results of "
"the pipeline test has to be present a csv file named ``out.csv``. All the"
" other file are used for validating and generating the results of the "
"single page tests for ``PdfFilter``, ``TextExtract`` and ``Deserialize`` "
"functions. The files are named respectively ``pdf_blks-{page "
"number}.pkl``, ``txt_blks-{page number}.pkl`` and ``financial_data-{page "
"number}.pkl`` and are direct dump of the object generated calling the "
"different functions on a specific ``xml tree`` (page of the document). "
"These files are `pickle files "
"<https://docs.python.org/3/library/pickle.html>`_ containing respectively"
" a list of ``PdfBlocks``, ``TextBlocks`` and ``FinancialData``. To "
"generate these files is present some utility functions in the "
"``devtools/make_tests.py`` file."
msgstr ""

#: ../../source/dev/tests.rst:50
msgid "Activate single page tests"
msgstr ""

#: ../../source/dev/tests.rst:52
msgid ""
"The dataset referring a format can contain a variable number of single "
"page tests to be performed. In not specified no test is performed, even "
"if the dataset contains the required data. To activate it is necessary to"
" modify the ``tests/conftest.py`` file adding to the "
"``single_page_tests`` array a key with the format name in capslock and "
"the list of the pages to test."
msgstr ""

