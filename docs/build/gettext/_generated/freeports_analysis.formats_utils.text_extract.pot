# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Oreste Sciacqualegni
# This file is distributed under the same license as the freeports_analysis package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: freeports_analysis \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-12 11:03+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/_generated/freeports_analysis.formats_utils.text_extract.rst:2
msgid "freeports\\_analysis.formats\\_utils.text\\_extract"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract:1
msgid "Module for text block processing and extraction in document analysis."
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract:3
msgid "This module provides functionality for: - Defining text block types through enumerations - Matching text against targets using various matching strategies - Extracting text blocks from PDF documents based on target matches - Supporting different matching methods (exact, fuzzy, prefix-based)"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract:9
msgid "Key components: - Matching functions (target_match, target_fuzzy_match, target_prefix_match) - Decorators for text block type definition (one_txt_blk, EquityBondTextBlockType) - Standard text extraction functionality through standard_text_extraction decorator"
msgstr ""

#: ../../source/_generated/freeports_analysis.formats_utils.text_extract.rst:9
msgid "Functions"
msgstr ""

#: ../../source/_generated/freeports_analysis.formats_utils.text_extract.rst:14:<autosummary>:1
msgid ":py:obj:`standard_text_extraction <freeports_analysis.formats_utils.text_extract.standard_text_extraction>`\\ \\(...\\[\\, currency\\, ...\\]\\)"
msgstr ""

#: ../../source/_generated/freeports_analysis.formats_utils.text_extract.rst:14:<autosummary>:1
#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction:1
msgid "Decorator for defining standard text extraction logic from PDF blocks based on target matches."
msgstr ""

#: ../../source/_generated/freeports_analysis.formats_utils.text_extract.rst:14:<autosummary>:1
msgid ":py:obj:`standard_text_extraction_loop <freeports_analysis.formats_utils.text_extract.standard_text_extraction_loop>`\\ \\(\\[match\\_func\\]\\)"
msgstr ""

#: ../../source/_generated/freeports_analysis.formats_utils.text_extract.rst:14:<autosummary>:1
#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction_loop:1
msgid "Decorator for standard text extraction loop."
msgstr ""

#: ../../source/_generated/freeports_analysis.formats_utils.text_extract.rst:16
msgid "Classes"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.EquityBondTextBlockType:1:<autosummary>:1
msgid ":py:obj:`EquityBondTextBlockType <freeports_analysis.formats_utils.text_extract.EquityBondTextBlockType>`\\ \\(\\*values\\)"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.EquityBondTextBlockType:1
#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.EquityBondTextBlockType:1:<autosummary>:1
msgid "Enum representing two type of text blocks in document processing."
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.EquityBondTextBlockType:5
msgid "Text block containing target `Bond` row."
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.EquityBondTextBlockType:0
msgid "type"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.EquityBondTextBlockType:7
#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.EquityBondTextBlockType:13
msgid "enum"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.EquityBondTextBlockType:11
msgid "Text block containing target `Equity` row."
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction:0
msgid "Parameters"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction:4
msgid "Relative position for nominal quantity metadata"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction:6
msgid "Relative position for market value metadata"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction:8
msgid "Relative position for percentage of net assets metadata"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction:10
msgid "Either relative position for currency metadata or Currency enum value, by default None"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction:12
msgid "Relative position for acquisition cost metadata, by default None"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction:14
msgid "Matching function to compare text against targets, by default target_match"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction:0
msgid "Returns"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction:17
msgid "A wrapped text extraction function that processes PDF blocks and returns matched TextBlock objects"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction:0
msgid "Return type"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction:22
msgid "Notes"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction:23
msgid "The decorated function can optionally be specified with the purpose of including additional metadata. The extraction process: 1. Normalizes and matches text against targets using the specified match_func 2. Extracts metadata from surrounding blocks based on extract_positions 3. Creates TextBlock objects for successful matches"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction_loop:3
msgid "This decorator wrap the function provide in the usual loop that give a simplify and higher level context to the decorated `text_extraction` function. Specifically it expect that in the metadata of each `PdfBlock` is present an indicator of which column it is located graphycally in the main table of the pdf page (it suppose that the data was tabular in some way) `table-col`. The loop: - Take each block and concat the content with the subsequent if"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction_loop:10
msgid "they are on the same column."
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction_loop:11
msgid "Use `match_func` to see if one between the target provided to the extraction function match with the content  of the block."
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction_loop:13
msgid "If it does it overwrite the list of `PdfBlock` to persist the concatenation of the block with is subsequent."
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction_loop:15
msgid "Add `company` metadata with the match"
msgstr ""

#: ../../../src/freeports_analysis/formats_utils/text_extract/__init__.py:docstring of freeports_analysis.formats_utils.text_extract.standard_text_extraction_loop:16
msgid "It create a `TextBlock` addint the metadata provided by the wrapped function. The wrapped function take as parameters the block list and the index of the matched block. It takes the modified list with merged content for block in the same column that matches the target."
msgstr ""

#: ../../source/_generated/freeports_analysis.formats_utils.text_extract.rst:22
msgid "Modules"
msgstr ""

#: ../../source/_generated/freeports_analysis.formats_utils.text_extract.rst:27:<autosummary>:1
msgid ":py:obj:`match <freeports_analysis.formats_utils.text_extract.match>`\\"
msgstr ""

#: ../../source/_generated/freeports_analysis.formats_utils.text_extract.rst:27:<autosummary>:1
msgid "Functions for different target matching algorithms"
msgstr ""
